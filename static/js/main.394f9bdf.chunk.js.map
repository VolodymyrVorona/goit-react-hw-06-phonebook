{"version":3,"sources":["Components/Filter/Filter.module.css","App.module.css","redux/contacts/contacts-actions.js","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactListItem.jsx","Components/ContactList/ContactsList.jsx","Components/Filter/Filter.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortId","generate","deleteContact","changeFilter","Form","state","handleInputChange","e","currentTarget","value","setState","findTheSameName","newName","contacts","props","normalizedName","toLowerCase","find","handleSubmit","preventDefault","alert","onSubmit","this","className","st","form","label","input","type","onChange","pattern","title","required","btn","Component","connect","items","dispatch","contact","actions","ContactListItem","onDeleteContact","listItem","onClick","getVisibleContacts","allContacts","filter","normalizedFilter","includes","map","onContactsFilter","wrapper","App","ContactForm","createReducer","_","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.394f9bdf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__Z84yE\",\"label\":\"Filter_label__19jWm\",\"input\":\"Filter_input__2CEsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2Rh_f\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortId from 'shortid';\n\nconst addContact = createAction('contact/add', ({ name, number }) => ({\n  payload: {\n    id: shortId.generate(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contact/delete');\n\nconst changeFilter = createAction('contact/changeFilter');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addContact, deleteContact, changeFilter };\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport actions from '../../redux/contacts/contacts-actions';\nimport st from './ContactForm.module.css';\n\nclass Form extends Component {\n  state = { name: '', number: '' };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  findTheSameName = newName => {\n    const { contacts } = this.props;\n    const normalizedName = newName.toLowerCase();\n\n    return contacts.find(({ name }) => name.toLowerCase() === normalizedName);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name } = this.state;\n\n    if (this.findTheSameName(name)) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    this.props.onSubmit(this.state);\n\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className={st.form} onSubmit={this.handleSubmit}>\n        <label className={st.label}>\n          Name\n          <input\n            className={st.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={st.label}>\n          Number\n          <input\n            className={st.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n\n        <button className={st.btn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { contacts: [...state.contacts.items] };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: contact => dispatch(actions.addContact(contact)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import PropTypes from 'prop-types';\nimport st from './ContactList.module.css';\n\nconst ContactListItem = ({ name, number, onDeleteContact }) => {\n  return (\n    <li className={st.listItem}>\n      <span className={st.name}>{name}:</span>\n      <span className={st.number}>{number}</span>\n      <button className={st.btn} type=\"button\" onClick={onDeleteContact}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactListItem;\n","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport actions from '../../redux/contacts/contacts-actions';\nimport ContactListItem from './ContactListItem';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          onDeleteContact={() => onDeleteContact(id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: getVisibleContacts(state.contacts.items, state.contacts.filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: id => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport st from './Filter.module.css';\n\nconst Filter = ({ onContactsFilter, value }) => {\n  return (\n    <div className={st.wrapper}>\n      <label className={st.label}>\n        Find contacts by name\n        <input\n          className={st.input}\n          type=\"text\"\n          name=\"name\"\n          value={value}\n          onChange={onContactsFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onContactsFilter: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onContactsFilter: e => dispatch(actions.changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import { Component } from 'react';\n\nimport ContactForm from './Components/ContactForm';\nimport ContactsList from './Components/ContactList';\nimport Filter from './Components/Filter';\n\nimport st from './App.module.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={st.wrapper}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactsList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport contacts from '../../contacts.json';\nimport actions from './contacts-actions';\n\nconst items = createReducer(contacts, {\n  [actions.addContact]: (state, { payload }) => [payload, ...state],\n\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IF4m\",\"label\":\"ContactForm_label__2mfXY\",\"input\":\"ContactForm_input__3dHde\",\"btn\":\"ContactForm_btn__tShh_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__2qeAn\",\"name\":\"ContactList_name__2vs56\",\"number\":\"ContactList_number__3h_Jg\",\"btn\":\"ContactList_btn__2-jnR\"};"],"sourceRoot":""}